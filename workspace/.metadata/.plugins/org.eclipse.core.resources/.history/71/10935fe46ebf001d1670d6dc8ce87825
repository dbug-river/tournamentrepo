package com.rivertech.console;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.yaml.snakeyaml.Yaml;

import com.rivertech.model.Game;
import com.rivertech.model.Round;
import com.rivertech.model.Slot;
import com.rivertech.repositories.DatawarehouseRepository;
import com.rivertech.repositories.TournamentRepository;
import com.rivertech.services.Planner;


public class ScheduleCreatorConsole {

	public static void main(String[] args) throws FileNotFoundException {
		final Logger logger = LoggerFactory.getLogger(ScheduleCreatorConsole.class);

		/* Check if the settings file exists. */
		File settingsFile = new File("settings.yaml");
		if (!settingsFile.exists()) {
			logger.error("Settings file not found");
			return;
		}

		/* If the settings file exist, load data */
		Yaml settings = new Yaml();
		InputStream input = new FileInputStream(settingsFile);
		Map<String, String> data = settings.load(input);

		/* Create the repository based on the settings */
		TournamentRepository repo = new TournamentRepository(data.get("url"), data.get("username"),
				data.get("password"));

		/* Get all available rounds */
		List<Round> rounds = repo.getTournamentSessionByBetAmount();
		rounds.addAll(repo.getTournamentSessionByRound());

		for(Round a : rounds) {
			System.out.println(a);
		}
		
		
		Planner planner = new Planner();
		List<Slot> slots = planner.solve(rounds);
		
		
		
		System.out.println("Ready ...");
		
	}

}
