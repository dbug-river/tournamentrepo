package com.rivertech.repositories;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.rivertech.model.Game;
import com.rivertech.model.Timeslot;

public class TournamentRepository extends AbstractRepository {

	public TournamentRepository(String url, String username, String password) {
		super(url, username, password);
	}
	
	
	public Game getGameById(int id) {
        Connection connection = null;
        Game game = null;
        try {
        	connection = this.GetConnection();
        	PreparedStatement ps = connection.prepareStatement("SELECT * FROM DW_GameDimension WHERE game_id = ?;");
        	ps.setInt(0, id);
		    ResultSet rs = ps.executeQuery();
		    rs.next();
		    game = new Game(rs.getInt("game_id"));
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
		return game;
	}
	
	public List<Timeslot> getAllSchedules(){
        /*Connection connection = null;
        List<String> users = new ArrayList<String>();
        try {
        	connection = this.GetConnection();
        	PreparedStatement ps = connection.prepareStatement("SELECT * FROM DW_UserDimension");
		    ResultSet rs = ps.executeQuery();
		    while(rs.next()) {
		    	users.add(rs.getString("user_id"));
		    }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
		return users;*/
		return new ArrayList<Timeslot>();
	}
	
	}
